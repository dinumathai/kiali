server:
  address: localhost
  port: 8000

  # Web context path to serve Kiali API and frontend from.
  # Default is /
  # web_root: /kiali

  # Uncomment static_content_root_directory to set up a different directory for static front-end content.
  # Default is /opt/kiali/console
  # static_content_root_directory: /static-files

  # Uncomment cors_allow_all to allow serving front-end from a different host (mainly for development)
  # Default is false
  # cors_allow_all: true

  # Support gzip compressed requests, uncomment to disable it.
  # Default is true
  # gzip_enabled: false
external_services:
  prometheus_service_url: http://prometheus-istio-system.127.0.0.1.nip.io
  # Uncomment istio_identity_domain to set a different value. This value must match the Istio configuration.
  # Default is "svc.cluster.local" (which matches Istio's default)
  # istio_identity_domain: svc.cluster.local
  jaeger:
    url: http://jaeger-query-istio-system.127.0.0.1.nip.io
  grafana:
    url: http://grafana-istio-system.127.0.0.1.nip.io
  # Uncomment grafana_service_url, used to generate links to Grafana
  # If unset, the Grafana service URL will be looked up from Kubernetes Grafana service. It may not always be available.
  # grafana_service_url: http://grafana-istio-system.127.0.0.1.nip.io

# Uncomment in_cluster to set a different value.
# Default is true (which matches Kiali default configuration to run inside a pod running on kubernetes)
# in_cluster: true

# Uncomment to use another istio labels
#istio_labels:
  # Uncomment app_label_name to set up a different label name for grouping all resources of an app.
  # Default is "app"
  # app_label_name: app

  # Uncomment service_label_name to set up a different label name for grouping all resources of an app version.
  # Default is "version"
  # version_label_name: version

# Uncomment to enable ldap authentication
#auth:
#  strategy: ldap
#  ldap:
#    ldap_host: ldapserver.example.com
#    ldap_port: 389
#    ldap_use_ssl: false
#    ldap_insecure_skip_verify: true
#    ldap_user_filter: (cn=%s)
#    ldap_group_filter: (cn=%s)
#    ldap_attributes: ['memberOf', 'cn', 'mail']
#    ldap_base: DC=organization,DC=example,DC=com
#    ldap_bind_dn: CN={USERNAME},OU=Devlopment,OU=AppUsers,OU=Accounts,DC=organization,DC=example,DC=com
#    ldap_search_filter: (&(name={USERID}))
#    ldap_member_of_key: memberOf
#    ldap_mail_id_key: mail
#    ldap_user_id_key: cn
#    ldap_role_filter: .*k8s.*
#    ldap_rbac:
#      enable_rbac: true
#      db_conn_string: username:password@tcp(localhost:3306)/schema_name
#      ad_rolename_formats:
#      - prefix: r_k8sone_
#        delimiter: _
#        format_string: r_k8sone_appCode_envCode_accessLevel
#      - prefix: r_k8stwo_
#        delimiter: _
#        format_string: r_k8stwo_appCode_envCode_accessLevel

#Uncomment to configure api documentation options
#apidocs:
  # Uncomment api_type_annotation_name to set up a different annotation name for defining a service api spec location
  # Default is "kiali.io/api-spec"
  # api_spec_annotation_name: kiali.io/api-spec

  # Uncomment api_type_annotation_name to set up a different annotation name for defining a service api type
  # Default is "kiali.io/api-type"
  # api_type_annotation_name: kiali.io/api-type
